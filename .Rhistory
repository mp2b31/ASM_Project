#     type="h",xlab="Lag",  ylab="", main="ACF Teoric")
#abline(h=0)
##Sample PACF vs. Teoric PACF
#pacf(dades, ylim=c(-1,1) ,lag.max=36,main="Sample PACF")
#plot(ARMAacf(model$model$phi,model$model$theta,lag.max=36, pacf=T),ylim=c(-1,1),
#     type="h", xlab="Lag", ylab="", main="PACF Teoric")
#abline(h=0)
#par(mfrow=c(1,1))
}
################# Fi Validation #################################
#################Validation#################################
validation=function(model){ #,dades
s=frequency(get(model$series))
resid=model$residuals
par(mfrow=c(2,2),mar=c(3,3,3,3))
#Residuals plot
plot(resid,main="Residuals")
abline(h=0)
abline(h=c(-3*sd(resid),3*sd(resid)),lty=3,col=4)
#Square Root of absolute values of residuals (Homocedasticity)
scatter.smooth(sqrt(abs(resid)),main="Square Root of Absolute residuals",
lpars=list(col=2))
#Normal plot of residuals
qqnorm(resid)
qqline(resid,col=2,lwd=2)
##Histogram of residuals with normal curve
hist(resid,breaks=20,freq=FALSE)
curve(dnorm(x,mean=mean(resid),sd=sd(resid)),col=2,add=T)
#ACF & PACF of residuals
par(mfrow=c(1,2))
acf(resid,ylim=c(-1,1),lag.max=60,col=c(2,rep(1,s-1)),lwd=1)
pacf(resid,ylim=c(-1,1),lag.max=60,col=c(rep(1,s-1),2),lwd=1)
par(mfrow=c(1,1))
#ACF & PACF of square residuals
par(mfrow=c(1,2))
acf(resid^2,ylim=c(-1,1),lag.max=60,col=c(2,rep(1,s-1)),lwd=1)
pacf(resid^2,ylim=c(-1,1),lag.max=60,col=c(rep(1,s-1),2),lwd=1)
par(mfrow=c(1,1))
#Ljung-Box p-values
par(mar=c(2,2,1,1))
tsdiag(model,gof.lag=7*s)
cat("\n--------------------------------------------------------------------\n")
print(model)
#Stationary and Invertible
cat("\nModul of AR Characteristic polynomial Roots: ",
Mod(polyroot(c(1,-model$model$phi))),"\n")
cat("\nModul of MA Characteristic polynomial Roots: ",
Mod(polyroot(c(1,model$model$theta))),"\n")
suppressMessages(require(forecast,quietly=TRUE,warn.conflicts=FALSE))
plot(model)
#Model expressed as an MA infinity (psi-weights)
psis=ARMAtoMA(ar=model$model$phi,ma=model$model$theta,lag.max=36)
names(psis)=paste("psi",1:36)
cat("\nPsi-weights (MA(inf))\n")
cat("\n--------------------\n")
print(psis[1:20])
#Model expressed as an AR infinity (pi-weights)
pis=-ARMAtoMA(ar=-model$model$theta,ma=-model$model$phi,lag.max=36)
names(pis)=paste("pi",1:36)
cat("\nPi-weights (AR(inf))\n")
cat("\n--------------------\n")
print(pis[1:20])
cat("\nDescriptive Statistics for the Residuals\n")
cat("\n----------------------------------------\n")
suppressMessages(require(fBasics,quietly=TRUE,warn.conflicts=FALSE))
##Anderson-Darling test
print(basicStats(resid))
## Add here complementary tests (use with caution!)
##---------------------------------------------------------
cat("\nNormality Tests\n")
cat("\n--------------------\n")
##Shapiro-Wilks Normality test
print(shapiro.test(resid(model)))
suppressMessages(require(nortest,quietly=TRUE,warn.conflicts=FALSE))
##Anderson-Darling test
print(ad.test(resid(model)))
suppressMessages(require(tseries,quietly=TRUE,warn.conflicts=FALSE))
##Jarque-Bera test
print(jarque.bera.test(resid(model)))
cat("\nHomoscedasticity Test\n")
cat("\n--------------------\n")
suppressMessages(require(lmtest,quietly=TRUE,warn.conflicts=FALSE))
##Breusch-Pagan test
obs=get(model$series)
print(bptest(resid(model)~I(obs-resid(model))))
cat("\nIndependence Tests\n")
cat("\n--------------------\n")
##Durbin-Watson test
print(dwtest(resid(model)~I(1:length(resid(model)))))
##Ljung-Box test
cat("\nLjung-Box test\n")
print(t(apply(matrix(c(1:4,(1:4)*s)),1,function(el) {
te=Box.test(resid(model),type="Ljung-Box",lag=el)
c(lag=(te$parameter),statistic=te$statistic[[1]],p.value=te$p.value)})))
##Sample ACF vs. Teoric ACF
#par(mfrow=c(2,2),mar=c(3,3,3,3))
#acf(dades, ylim=c(-1,1) ,lag.max=36,main="Sample ACF")
#plot(ARMAacf(model$model$phi,model$model$theta,lag.max=36),ylim=c(-1,1),
#     type="h",xlab="Lag",  ylab="", main="ACF Teoric")
#abline(h=0)
##Sample PACF vs. Teoric PACF
#pacf(dades, ylim=c(-1,1) ,lag.max=36,main="Sample PACF")
#plot(ARMAacf(model$model$phi,model$model$theta,lag.max=36, pacf=T),ylim=c(-1,1),
#     type="h", xlab="Lag", ylab="", main="PACF Teoric")
#abline(h=0)
#par(mfrow=c(1,1))
}
################# Fi Validation #################################
validation(mod1) #,d1d12lnserie
ultim=c(2018,12)
pdq=c(2,1,0)
PDQ=c(4,1,0)
serie1=window(serie,end=ultim+c(1,0))
lnserie1=log(serie1)
serie2=window(serie,end=ultim)
lnserie2=log(serie2)
(mod1=arima(lnserie1,order=pdq,seasonal=list(order=PDQ,period=12)))
(mod2=arima(lnserie2,order=pdq,seasonal=list(order=PDQ,period=12)))
pred=predict(mod2,n.ahead=12)
pr<-ts(c(tail(lnserie2,1),pred$pred),start=ultim,freq=12)
se<-ts(c(0,pred$se),start=ultim,freq=12)
#Intervals
tl<-ts(exp(pr-1.96*se),start=ultim,freq=12)
tu<-ts(exp(pr+1.96*se),start=ultim,freq=12)
pr<-ts(exp(pr),start=ultim,freq=12)
reduced <- window(serie,start=ultim-c(4,0) ,end=ultim+c(1,0))
top <- max(reduced,tu)
bot <- min(reduced,tl)
mid <- top - bot
ts.plot(reduced,tl,tu,pr,lty=c(1,2,2,1),col=c(1,4,4,2),xlim=ultim[1]+c(-3,+2),ylim=c(bot-0.1*mid,top+0.1*mid),type="o",main="Model ARIMA(2,1,0)(4,1,0)12")
abline(v=(ultim[1]-3):(ultim[1]+2),lty=3,col=4)
(previs=window(cbind(tl,pr,tu,serie,error=round(serie-pr,3)),start=ultim))
obs=window(serie,start=ultim)
mod.RMSE1=sqrt(sum((obs-pr)^2)/12)
mod.MAE1=sum(abs(obs-pr))/12
mod.RMSPE1=sqrt(sum(((obs-pr)/obs)^2)/12)
mod.MAPE1=sum(abs(obs-pr)/obs)/12
data.frame("RMSE"=mod.RMSE1,"MAE"=mod.MAE1,"RMSPE"=mod.RMSPE1,"MAPE"=mod.MAPE1)
mCI1=mean(tu-tl)
cat("\nMean Length CI: ",mCI1)
source("CalendarEffects.r")
data=c(start(lnserie)[1],start(lnserie)[2], length(lnserie))
(wTradDays=Wtrad(data))
(wEast=Weaster(data))
(modTD=arima(lnserie,order=pdq,seasonal=list(order=PDQ,period=12),xreg=wTradDays))
abs(modTD$coef/sqrt(diag(modTD$var.coef)))
(modEa=arima(lnserie,order=pdq,seasonal=list(order=PDQ,period=12),xreg=wEast))
abs(modEa$coef/sqrt(diag(modEa$var.coef)))
mod1$aic
modTD$aic
modEa$aic
modEC$aic
source("CalendarEffects.r")
data=c(start(lnserie)[1],start(lnserie)[2], length(lnserie))
(wTradDays=Wtrad(data))
(wEast=Weaster(data))
(modTD=arima(lnserie,order=pdq,seasonal=list(order=PDQ,period=12),xreg=wTradDays))
abs(modTD$coef/sqrt(diag(modTD$var.coef)))
(modEa=arima(lnserie,order=pdq,seasonal=list(order=PDQ,period=12),xreg=wEast))
abs(modEa$coef/sqrt(diag(modEa$var.coef)))
(modEC=arima(lnserie,order=pdq,seasonal=list(order=PDQ,period=12),xreg=data.frame(wTradDays,wEast)))
abs(modEC$coef/sqrt(diag(modEC$var.coef)))
mod1$aic
modTD$aic
modEa$aic
modEC$aic
EfecTD=coef(modEC)["wTradDays"]*wTradDays
EfecSS=coef(modEC)["wEast"]*wEast
lnserieEC=lnserie-EfecTD-EfecSS
d1d12lnserieEC=diff(diff(lnserieEC,12))
plot(EfecTD+EfecSS)
serieEC=exp(lnserieEC)
plot(serie,xlim=c(2014,2018),ylim=c(500,1500),type="o")
lines(serieEC,col=2,type="o")
abline(v=2014:2017,lty=3,col=4)
par(mfrow=c(1,2))
acf(d1d12lnserieEC,ylim=c(-1,1),lag.max=120,col=c(2,rep(1,11)),lwd=2)
pacf(d1d12lnserieEC,ylim=c(-1,1),lag.max=120,col=c(rep(1,11),2),lwd=2)
par(mfrow=c(1,1))
(mod1EC=arima(lnserie,order=c(1,1,0),seasonal=list(order=c(1,1,0),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod1EC$coef/sqrt(diag(mod1EC$var.coef)))
(mod1EC=arima(lnserie,order=c(1,0,0),seasonal=list(order=c(1,0,0),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod1EC$coef/sqrt(diag(mod1EC$var.coef)))
(mod1EC=arima(d1d12lnserieEC,order=c(1,0,0),seasonal=list(order=c(1,0,0),period=12),xreg=data.frame(wTradDays,wEast)))
(mod1EC=arima(d1d12lnserie,order=c(1,0,0),seasonal=list(order=c(1,0,0),period=12),xreg=data.frame(wTradDays,wEast)))
length(d1d12lnserie)
length(lnserie)
length(wTradDays)
(mod1EC=arima(lnserie,order=c(1,1,0),seasonal=list(order=c(1,1,0),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod1EC$coef/sqrt(diag(mod1EC$var.coef)))
(mod1EC=arima(lnserie,order=c(1,1,0),seasonal=list(order=c(1,1,0),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod1EC$coef/sqrt(diag(mod1EC$var.coef)))
(mod2EC=arima(lnserie,order=c(0,1,2),seasonal=list(order=c(1,1,0),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod2EC$coef/sqrt(diag(mod2EC$var.coef)))
pdq <- c(0,1,2)
PDQ <- c(1,1,0)
EfecTD=coef(mod2EC)["wTradDays"]*wTradDays
EfecSS=coef(mod2EC)["wEast"]*wEast
plot(EfecTD+EfecSS)
reduced <- window(serie,start=ultim-c(4,0) ,end=ultim-c(1,0))
lnserieEC=lnserie-EfecTD-EfecSS
serieEC=exp(lnserieEC)
plot(reduced,type="o")
lines(serieEC,col=2,type="o")
abline(v=2014:2017,lty=3,col=4)
window(cbind(wTradDays,wEast,serie,serieEC),start=2014)
reduced <- window(serie,start=ultim-c(4,0) ,end=ultim-c(1,0))
lnserieEC=lnserie-EfecTD-EfecSS
serieEC=exp(lnserieEC)
plot(reduced,type="o")
lines(serieEC,col=2,type="o")
abline(v=2014:2017,lty=3,col=4)
window(cbind(wTradDays,wEast,serie,serieEC),start=2014)
validation(mod2EC)#,d1d12lnserieEC
ultim=c(2018,12)
serie1=window(serie,end=ultim+c(1,0))
lnserie1=log(serie1)
serie2=window(serie,end=ultim)
lnserie2=log(serie2)
wTradDays2=window(wTradDays,end=ultim)
wEast2=window(wEast,end=ultim)
(modEC=arima(lnserie1,order=pdq,seasonal=list(order=PDQ,period=12),xreg=data.frame(wTradDays,wEast)))
(modEC2=arima(lnserie2,order=pdq,seasonal=list(order=PDQ,period=12),xreg=data.frame(wTradDays2,wEast2)))
pred=predict(modEC2,n.ahead=12,newxreg=window(cbind(wTradDays,wEast),start=c(ultim[1]+1,1)))
predic=pred$pr
pr<-ts(c(tail(lnserie2,1),pred$pred),start=ultim,freq=12)
se<-ts(c(0,pred$se),start=ultim,freq=12)
#Intervals
tl<-ts(exp(pr-1.96*se),start=ultim,freq=12)
tu<-ts(exp(pr+1.96*se),start=ultim,freq=12)
pr<-ts(exp(pr),start=ultim,freq=12)
reduced <- window(serie,start=ultim-c(4,0) ,end=ultim+c(1,0))
top <- max(reduced,tu)
bot <- min(reduced,tl)
mid <- top - bot
ts.plot(reduced,tl,tu,pr,lty=c(1,2,2,1),col=c(1,4,4,2),xlim=ultim[1]+c(-3,+2),ylim=c(bot-0.1*mid,top+0.1*mid),type="o",main="Model ARIMA(0,1,2)(1,1,0)12+TD+Easter")
abline(v=(ultim[1]-3):(ultim[1]+2),lty=3,col=4)
(previs=window(cbind(tl,pr,tu,serie,error=round(serie-pr,3)),start=ultim))
obs=window(serie,start=ultim)
mod.RMSE1=sqrt(sum((obs-pr)^2)/12)
mod.MAE1=sum(abs(obs-pr))/12
mod.RMSPE1=sqrt(sum(((obs-pr)/obs)^2)/12)
mod.MAPE1=sum(abs(obs-pr)/obs)/12
data.frame("RMSE"=mod.RMSE1,"MAE"=mod.MAE1,"RMSPE"=mod.RMSPE1,"MAPE"=mod.MAPE1)
mCI1=mean(tu-tl)
cat("\nMean Length CI: ",mCI1)
reduced <- window(serie,start=ultim-c(4,0) ,end=ultim-c(1,0))
lnserieEC=lnserie-EfecTD-EfecSS
serieEC=exp(lnserieEC)
plot(reduced,type="o")
lines(serieEC,col=2,type="o")
abline(v=2014:2017,lty=3,col=4)
window(cbind(wTradDays,wEast,serie,serieEC),start=2014)
ultim=c(2018,12)
serie1=window(serie,end=ultim+c(1,0))
lnserie1=log(serie1)
serie2=window(serie,end=ultim)
lnserie2=log(serie2)
wTradDays2=window(wTradDays,end=ultim)
wEast2=window(wEast,end=ultim)
(modEC=arima(lnserie1,order=pdq,seasonal=list(order=PDQ,period=12),xreg=data.frame(wTradDays,wEast)))
(modEC2=arima(lnserie2,order=pdq,seasonal=list(order=PDQ,period=12),xreg=data.frame(wTradDays2,wEast2)))
pred=predict(modEC2,n.ahead=12,newxreg=window(cbind(wTradDays,wEast),start=c(ultim[1]+1,1)))
predic=pred$pr
pr<-ts(c(tail(lnserie2,1),pred$pred),start=ultim,freq=12)
se<-ts(c(0,pred$se),start=ultim,freq=12)
#Intervals
tl<-ts(exp(pr-1.96*se),start=ultim,freq=12)
tu<-ts(exp(pr+1.96*se),start=ultim,freq=12)
pr<-ts(exp(pr),start=ultim,freq=12)
reduced <- window(serie,start=ultim-c(4,0) ,end=ultim+c(1,0))
top <- max(reduced,tu)
bot <- min(reduced,tl)
mid <- top - bot
ts.plot(reduced,tl,tu,pr,lty=c(1,2,2,1),col=c(1,4,4,2),xlim=ultim[1]+c(-3,+2),ylim=c(bot-0.1*mid,top+0.1*mid),type="o",main="Model ARIMA(0,1,2)(1,1,0)12+TD+Easter")
abline(v=(ultim[1]-3):(ultim[1]+2),lty=3,col=4)
(previs=window(cbind(tl,pr,tu,serie,error=round(serie-pr,3)),start=ultim))
pred=predict(modEC2,n.ahead=12,newxreg=window(cbind(wTradDays,wEast),start=c(ultim[1]+1,1)))
predic=pred$pr
pr<-ts(c(tail(lnserie2,1),pred$pred),start=ultim,freq=12)
se<-ts(c(0,pred$se),start=ultim,freq=12)
#Intervals
tl<-ts(exp(pr-1.96*se),start=ultim,freq=12)
tu<-ts(exp(pr+1.96*se),start=ultim,freq=12)
pr<-ts(exp(pr),start=ultim,freq=12)
reduced <- window(serie,start=ultim-c(4,0) ,end=ultim+c(1,0))
top <- max(reduced,tu)
bot <- min(reduced,tl)
mid <- top - bot
ts.plot(reduced,tl,tu,pr,lty=c(1,2,2,1),col=c(1,4,4,2),xlim=ultim[1]+c(-3,+2),ylim=c(bot-0.1*mid,top+0.1*mid),type="o",main="Model ARIMA(0,1,2)(1,1,0)12+TD+Easter")
abline(v=(ultim[1]-3):(ultim[1]+2),lty=3,col=4)
(previs=window(cbind(tl,pr,tu,serie,error=round(serie-pr,3)),start=ultim))
obs=window(serie,start=ultim)
mod.RMSE1=sqrt(sum((obs-pr)^2)/12)
mod.MAE1=sum(abs(obs-pr))/12
mod.RMSPE1=sqrt(sum(((obs-pr)/obs)^2)/12)
mod.MAPE1=sum(abs(obs-pr)/obs)/12
data.frame("RMSE"=mod.RMSE1,"MAE"=mod.MAE1,"RMSPE"=mod.RMSPE1,"MAPE"=mod.MAPE1)
mCI1=mean(tu-tl)
cat("\nMean Length CI: ",mCI1)
########## Atípics (Outliers) ###############################################
source("atipics2.r")
# crit 2.9 cut be a good threahhold
modEC.atip=outdetec(mod1EC,dif=c(1,12),crit=3.5,LS=T)
modEC.atip$sigma
atipics=modEC.atip$atip[order(modEC.atip$atip[,1]),]
month=c("Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic")
data.frame(atipics,Fecha=paste(month[(atipics[,1]-1)%%12+1],start(lnserie)[1]+((atipics[,1]-1)%/%12)),perc.Obs=exp(atipics[,3])*100)
mod1EC$aic
mod2EC$aic
# crit 2.9 cut be a good threahhold
modEC.atip=outdetec(mod2EC,dif=c(1,12),crit=3.5,LS=T)
modEC.atip$sigma
atipics=modEC.atip$atip[order(modEC.atip$atip[,1]),]
month=c("Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic")
data.frame(atipics,Fecha=paste(month[(atipics[,1]-1)%%12+1],start(lnserie)[1]+((atipics[,1]-1)%/%12)),perc.Obs=exp(atipics[,3])*100)
# crit 2.9 cut be a good threahhold
modEC.atip=outdetec(mod2EC,dif=c(1,12),crit=3,LS=T)
modEC.atip$sigma
atipics=modEC.atip$atip[order(modEC.atip$atip[,1]),]
month=c("Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic")
data.frame(atipics,Fecha=paste(month[(atipics[,1]-1)%%12+1],start(lnserie)[1]+((atipics[,1]-1)%/%12)),perc.Obs=exp(atipics[,3])*100)
lnserie.lin=lineal(lnserie,modEC.atip$atip)
serie.lin=exp(lnserie.lin)
d1d12lnserie.lin=diff(diff(lnserie.lin,12))
par(mfrow=c(1,2))
acf(d1d12lnserie.lin,ylim=c(-1,1),lag.max=120,col=c(2,rep(1,11)),lwd=2)
pacf(d1d12lnserie.lin,ylim=c(-1,1),lag.max=120,col=c(rep(1,11),2),lwd=2)
par(mfrow=c(1,1))
lnserieEC.lin=lineal(lnserieEC,modEC.atip$atip)
serie.lin=exp(lnserie.lin)
lnserieEC.lin=lineal(lnserieEC,modEC.atip$atip)
serie.lin=exp(lnserieEC.lin)
lnserie.lin=lineal(lnserie,modEC.atip$atip)
serie.lin=exp(lnserie.lin)
lnserieEC.lin=lineal(lnserieEC,modEC.atip$atip)
serieEC.lin=exp(lnserieEC.lin)
d1d12lnserieEC.lin=diff(diff(lnserieEC.lin,12))
par(mfrow=c(1,2))
acf(d1d12lnserieEC.lin,ylim=c(-1,1),lag.max=120,col=c(2,rep(1,11)),lwd=2)
pacf(d1d12lnserieEC.lin,ylim=c(-1,1),lag.max=120,col=c(rep(1,11),2),lwd=2)
par(mfrow=c(1,1))
(mod1EC.lin=arima(lnserie.lin,order=c(2,1,0),seasonal=list(order=c(1,1,0),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod1EC.lin$coef/sqrt(diag(mod1EC.lin$var.coef)))
(mod1EC.lin=arima(lnserie.lin,order=c(2,1,0),seasonal=list(order=c(1,1,0),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod1EC.lin$coef/sqrt(diag(mod1EC.lin$var.coef)))
(mod2EC.lin=arima(lnserie.lin,order=c(4,1,0),seasonal=list(order=c(1,1,0),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod2EC.lin$coef/sqrt(diag(mod2EC.lin$var.coef)))
(mod3EC.lin=arima(lnserie.lin,order=c(0,1,2),seasonal=list(order=c(1,1,0),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod3EC.lin$coef/sqrt(diag(mod3EC.lin$var.coef)))
(mod4EC.lin=arima(lnserie.lin,order=c(0,1,4),seasonal=list(order=c(1,1,0),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod4EC.lin$coef/sqrt(diag(mod4EC.lin$var.coef)))
(mod5EC.lin=arima(lnserie.lin,order=c(2,1,0),seasonal=list(order=c(0,1,1),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod5EC.lin$coef/sqrt(diag(mod5EC.lin$var.coef)))
(mod6EC.lin=arima(lnserie.lin,order=c(4,1,0),seasonal=list(order=c(0,1,1),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod6EC.lin$coef/sqrt(diag(mod6EC.lin$var.coef)))
(mod7EC.lin=arima(lnserie.lin,order=c(0,1,2),seasonal=list(order=c(0,1,1),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod7EC.lin$coef/sqrt(diag(mod7EC.lin$var.coef)))
(mod8EC.lin=arima(lnserie.lin,order=c(0,1,4),seasonal=list(order=c(0,1,1),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod8EC.lin$coef/sqrt(diag(mod8EC.lin$var.coef)))
(mod5EC.lin=arima(lnserie.lin,order=c(2,1,0),seasonal=list(order=c(0,1,3),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod5EC.lin$coef/sqrt(diag(mod5EC.lin$var.coef)))
(mod6EC.lin=arima(lnserie.lin,order=c(4,1,0),seasonal=list(order=c(0,1,3),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod6EC.lin$coef/sqrt(diag(mod6EC.lin$var.coef)))
(mod9EC.lin=arima(lnserie.lin,order=c(2,1,0),seasonal=list(order=c(0,1,3),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod9EC.lin$coef/sqrt(diag(mod9EC.lin$var.coef)))
(mod10EC.lin=arima(lnserie.lin,order=c(4,1,0),seasonal=list(order=c(0,1,3),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod10EC.lin$coef/sqrt(diag(mod10EC.lin$var.coef)))
(mod11EC.lin=arima(lnserie.lin,order=c(0,1,2),seasonal=list(order=c(0,1,3),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod11EC.lin$coef/sqrt(diag(mod11EC.lin$var.coef)))
(mod12EC.lin=arima(lnserie.lin,order=c(0,1,4),seasonal=list(order=c(0,1,3),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod12EC.lin$coef/sqrt(diag(mod12EC.lin$var.coef)))
mod1EC.lin$aic
mod2EC.lin$aic
mod3EC.lin$aic
mod4EC.lin$aic
mod5EC.lin$aic
mod6EC.lin$aic
mod7EC.lin$aic
mod8EC.lin$aic
mod9EC.lin$aic
mod10EC.lin$aic
mod11EC.lin$aic
mod12EC.lin$aic
mode5EC.lin
mod5EC.lin
mod9EC.lin
(mod5EC.lin=arima(lnserie.lin,order=c(2,1,0),seasonal=list(order=c(0,1,1),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod5EC.lin$coef/sqrt(diag(mod5EC.lin$var.coef)))
(mod6EC.lin=arima(lnserie.lin,order=c(4,1,0),seasonal=list(order=c(0,1,1),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod6EC.lin$coef/sqrt(diag(mod6EC.lin$var.coef)))
(mod7EC.lin=arima(lnserie.lin,order=c(0,1,2),seasonal=list(order=c(0,1,1),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod7EC.lin$coef/sqrt(diag(mod7EC.lin$var.coef)))
(mod8EC.lin=arima(lnserie.lin,order=c(0,1,4),seasonal=list(order=c(0,1,1),period=12),xreg=data.frame(wTradDays,wEast)))
abs(mod8EC.lin$coef/sqrt(diag(mod8EC.lin$var.coef)))
mod1EC.lin$aic
mod2EC.lin$aic
mod3EC.lin$aic
mod4EC.lin$aic
mod5EC.lin$aic
mod6EC.lin$aic
mod7EC.lin$aic
mod8EC.lin$aic
mod9EC.lin$aic
mod10EC.lin$aic
mod11EC.lin$aic
mod12EC.lin$aic
mod9EC.lin
pdq <- c(2,1,0)
PDQ <- c(4,1,0)
EfecTD=coef(mod9EC.lin)["wTradDays"]*wTradDays
EfecSS=coef(mod9EC.lin)["wEast"]*wEast
lnserieEC.lin=lnserie.lin-EfecTD-EfecSS
plot(lnserie-lnserieEC.lin)
plot(exp(lnserieEC.lin),col=2)
lines(serie)
d12lnserieEC.lin=diff(lnserieEC.lin,12)
d1d12lnserieEC.lin=diff(d12lnserieEC.lin,1)
validation(mod3EC.lin)#,d1d12lnserieEC.lin
validation(mod9EC.lin)#,d1d12lnserieEC.lin
ultim=c(2018,12)
serie.lin1=window(serie.lin,end=ultim+c(1,0))
lnserie.lin1=log(serie.lin1)
serie.lin2=window(serie.lin,end=ultim)
lnserie.lin2=log(serie.lin2)
wTradDays2=window(wTradDays,end=ultim)
wEast2=window(wEast,end=ultim)
(modEC.lin=arima(lnserie.lin1,order=pdq,seasonal=list(order=PDQ,period=12),xreg=data.frame(wTradDays,wEast)))
(modEC.lin2=arima(lnserie.lin2,order=pdq,seasonal=list(order=PDQ,period=12),xreg=data.frame(wTradDays2,wEast2)))
pred=predict(modEC.lin2,n.ahead=12,newxreg=window(cbind(wTradDays,wEast),start=c(ultim[1]+1,1)))
predic=pred$pr
pr<-ts(c(tail(lnserie2,1),predic),start=ultim,freq=12)
se<-ts(c(0,pred$se),start=ultim,freq=12)
#Intervals
tl<-ts(exp(pr-1.96*se),start=ultim,freq=12)
tu<-ts(exp(pr+1.96*se),start=ultim,freq=12)
pr<-ts(exp(pr),start=ultim,freq=12)
ts.plot(reduced,tl,tu,pr,lty=c(1,2,2,1),col=c(1,4,4,2),xlim=ultim[1]+c(-3,2),type="o",main="Model ARIMA(0,1,1)(0,1,1)12+TD+Easter")
abline(v=(ultim[1]-3):(ultim[1]+2),lty=3,col=4)
atipics=modEC.atip$atip[order(modEC.atip$atip[,1]),]
month=c("Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic")
data.frame(atipics,Fecha=paste(month[(atipics[,1]-1)%%12+1],start(lnserie)[1]+((atipics[,1]-1)%/%12)),perc.Obs=exp(atipics[,3])*100)
par(mfrow=c(1,1))
pred=predict(modEC.lin2,n.ahead=12,newxreg=window(cbind(wTradDays,wEast),start=c(ultim[1]+1,1)))
predic=pred$pr
pr<-ts(c(tail(lnserie2,1),predic),start=ultim,freq=12)
se<-ts(c(0,pred$se),start=ultim,freq=12)
#Intervals
tl<-ts(exp(pr-1.96*se),start=ultim,freq=12)
tu<-ts(exp(pr+1.96*se),start=ultim,freq=12)
pr<-ts(exp(pr),start=ultim,freq=12)
ts.plot(reduced,tl,tu,pr,lty=c(1,2,2,1),col=c(1,4,4,2),xlim=ultim[1]+c(-3,2),type="o",main="Model ARIMA(0,1,1)(0,1,1)12+TD+Easter")
abline(v=(ultim[1]-3):(ultim[1]+2),lty=3,col=4)
# crit 2.9 cut be a good threahhold
modEC.atip=outdetec(mod2EC,dif=c(1,12),crit=3,LS=F)
modEC.atip$sigma
# crit 2.9 cut be a good threahhold
modEC.atip=outdetec(mod2EC,dif=c(1,12),crit=3,LS=T)
modEC.atip$sigma
EfecTD=coef(mod9EC.lin)["wTradDays"]*wTradDays
EfecSS=coef(mod9EC.lin)["wEast"]*wEast
lnserieEC.lin=lnserie.lin-EfecTD-EfecSS
plot(lnserie-lnserieEC.lin)
(previs.lin=window(cbind(tl,pr,tu,serie,error=round(serie-pr,3)),start=ultim))
obs=window(serie,start=ultim)
mod.RMSE3=sqrt(sum((obs-pr)^2)/12)
mod.MAE3=sum(abs(obs-pr))/12
mod.RMSPE3=sqrt(sum(((obs-pr)/obs)^2)/12)
mod.MAPE3=sum(abs(obs-pr)/obs)/12
data.frame("RMSE"=mod.RMSE3,"MAE"=mod.MAE3,"RMSPE"=mod.RMSPE3,"MAPE"=mod.MAPE3)
mCI3=mean(tu-tl)
cat("\nMean Length CI: ",mCI3)
##### Previsions a llarg termini amb el model complet ######
data3=c(ultim[1]+2, 1, 12)
wTradDays3=Wtrad(data3)
wEast3=Weaster(data3)
pred=predict(modEC.lin,n.ahead=12,newxreg=data.frame(wTradDays3,wEast3))
predic=pred$pr
pr<-ts(c(lnserie[length(lnserie)],predic),start=ultim+c(1,0),freq=12)
se<-ts(c(0,pred$se),start=ultim+c(1,0),freq=12)
#Intervals
tl3<-ts(exp(pr-1.96*se),start=ultim+c(1,0),freq=12)
tu3<-ts(exp(pr+1.96*se),start=ultim+c(1,0),freq=12)
pr3<-ts(exp(pr),start=ultim+c(1,0),freq=12)
ts.plot(serie,tl3,tu3,pr3,lty=c(1,2,2,1),col=c(1,4,4,2),xlim=ultim[1]+c(-2,3),type="o",main="Model ARIMA(0,1,1)(0,1,1)12")
abline(v=(ultim[1]-2):(ultim[1]+3),lty=3,col=4)
pred=predict(modEC.lin2,n.ahead=12,newxreg=window(cbind(wTradDays,wEast),start=c(ultim[1]+1,1)))
predic=pred$pr
pr<-ts(c(tail(lnserie2,1),predic),start=ultim,freq=12)
se<-ts(c(0,pred$se),start=ultim,freq=12)
#Intervals
tl<-ts(exp(pr-1.96*se),start=ultim,freq=12)
tu<-ts(exp(pr+1.96*se),start=ultim,freq=12)
pr<-ts(exp(pr),start=ultim,freq=12)
ts.plot(reduced,tl,tu,pr,lty=c(1,2,2,1),col=c(1,4,4,2),xlim=ultim[1]+c(-3,2),type="o",main="Model ARIMA(0,1,1)(0,1,1)12+TD+Easter")
abline(v=(ultim[1]-3):(ultim[1]+2),lty=3,col=4)
serie=window(ts(read.table("cemento.dat"),start=1990,freq=12))
print(round(serie,0))
plot(serie,main="Apparent cement consumption in Spain (Thousand of tones)")
abline(v=1990:2020,col=4,lty=3)
m=apply(matrix(serie,nr=12),2,mean)
v=apply(matrix(serie,nr=12),2,var)
plot(m,v,xlab="Annual Mean",ylab="Annual Variance",main="Annual Mean against Annual Variance values")
abline(lm(v~m),col=2,lty=3,lwd=2)
boxplot(serie ~ floor(time(serie)), main = "Distribution of Time Series Data Across Time", xlab = "Year", ylab = "Cement Consumption")
lnserie=log(serie)
plot(lnserie, xlab = "Time", ylab = "Log Data", main = "Log transformation of Data over Time")
m=apply(matrix(lnserie,nr=12),2,mean)
v=apply(matrix(lnserie,nr=12),2,var)
plot(m,v,xlab="Annual Log Mean",ylab="Annual Log Variance",main="Annual Log Mean against Annual Log Variance values")
abline(lm(v~m),col=2,lty=3,lwd=2)
boxplot(lnserie~floor(time(lnserie)), main = "Distribution of Log Data Across Time", xlab = "Year", ylab = "Log of Cement Consumption")
